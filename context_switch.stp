#! /usr/bin/env stap

global context_switch_times;
global context_switch_prev;
global context_switch_current;

/** 
 * scheduler.cpu_off - Process will stop running on the cpu
 * @cpu_id: Name of the processor context_switch is running on
 * @context_switch_times: Start time of the context switch
 **/
probe scheduler.cpu_off {
    
    cpu_id = task_cpu(task_current());
    context_switch_times[cpu_id] = gettimeofday_ns();
    context_switch_prev[cpu_id] = execname();
    context_switch_current[cpu_id] = $next;
}

/** 
 * scheduler.cpu_on - Tracks when a process starts executing on a CPU
 * @context_switch_end: End time of the context switch 
 * @cpu_id: Name of the processor context_switch is running on
 * @context_switch_on: time the context switch started
 **/
probe scheduler.cpu_on {

    context_switch_off = gettimeofday_ns();
    cpu_id = task_cpu(task_current());
    context_switch_on = context_switch_times[cpu_id];
    if (context_switch_on > 0 ) {
        printf("%5d %5d %s CONTEXT_SWITCH_ON \n%5d %5d %s CONTEXT_SWITCH_OFF\n",  context_switch_on, cpu_id, context_switch_prev[cpu_id], context_switch_off, cpu_id, execname());
    }

}
